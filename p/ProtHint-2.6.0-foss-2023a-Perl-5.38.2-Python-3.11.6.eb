easyblock = 'Tarball'

name = 'ProtHint'
version = '2.6.0'
versionsuffix = '-Perl-%(perlver)s-Python-%(pyver)s'

homepage = 'https://github.com/gatech-genemark/ProtHint'
description = """Pipeline for predicting and scoring hints (in the form of introns, start and
 stop codons) in the genome of interest by mapping and spliced aligning predicted genes to a database of
 reference protein sequences."""

toolchain = {'name': 'foss', 'version': '2023a'}
toolchainopts = {'openmp': True, 'opt': True}

source_urls = ['https://github.com/gatech-genemark/%(name)s/releases/download/v%(version)s']
sources = [SOURCE_TAR_GZ]
#checksums = ['440778dd6b8b5eafaca492b0124a8f88fdd8f072209ed8e8df3e6cd89165c2a4']

dependencies = [
    ('Perl', '5.38.2'),
    ('Python', '3.11.6'),
    ('GeneMark-ES', '4.71'),
    ('DIAMOND', '2.1.1'),
    ('spaln', '2.4.13f'),
]

exts_defaultclass = 'PerlModule'

#exts_filter = ("perldoc -lm %(ext_name)s ", "")

exts_list = [
              ('File::HomeDir', '1.006', {
                'source_tmpl':'File-HomeDir-1.006.tar.gz',
                'source_urls':['https://cpan.metacpan.org/authors/id/R/RE/REHSACK/'],
                'checksums':['593737c62df0f6dab5d4122e0b4476417945bb6262c33eedc009665ef1548852'],
              }),
      ('MCE::Mutex', '1.884', {
            'source_tmpl':'MCE-1.884.tar.gz',
            'source_urls':['https://cpan.metacpan.org/authors/id/M/MA/MARIOROY/'],
            'checksums':['c830c0e548094f19c620049e744258be2c121d4a86cf7c94a37599ad016daf33'],
      }),
      ('Math::Utils', '1.14', {
            'source_tmpl':'Math-Utils-1.14.tar.gz',
            'source_urls':['https://cpan.metacpan.org/authors/id/J/JG/JGAMBLE/'],
            'checksums':['88a20ae0736a622671b92bb2a350969af424d7610284530b277c8020235f2695'],
       }),
        ('threads', '2.21', {
            'source_tmpl':'threads-2.21.tar.gz',
            'source_urls':['https://cpan.metacpan.org/authors/id/J/JD/JDHEDDEN/'],
            'checksums':['28394c98a2bcae6f20ffb8a3d965a1c194b764c650169e2050ee38dbaa10f110'],
       }),
        ('Thread::Queue', '3.13', {
            'source_tmpl':'Thread-Queue-3.13.tar.gz',
            'source_urls':['https://cpan.metacpan.org/authors/id/J/JD/JDHEDDEN/'],
            'checksums':['6ba3dacddd2fbb66822b4aa1d11a0a5273cd04c825cb3ff31c20d7037cbfdce8'],
       }),
]

fix_python_shebang_for = ['bin/*.py']

sanity_check_paths = {
    'files': ['bin/prothint.py'],
    'dirs': [],
}

# see https://github.com/gatech-genemark/ProtHint/tree/master/example
#local_test_cmd = "cp -a %(installdir)s/example %(builddir)s && cd %(builddir)s/example/input && "
#local_test_cmd += "prothint.py genome.fasta proteins.fasta --geneMarkGtf genemark.gtf --workdir ../test && "

# verify results using recursive 'diff', which exists with non-zero exit code if a difference was found
#local_test_cmd += "cd %(builddir)s/example && "
#local_test_cmd += "diff -ru <(sort output/prothint.gff) <(sort test/prothint.gff) && "
#local_test_cmd += "diff -ru <(sort output/evidence.gff) <(sort test/evidence.gff)"

sanity_check_commands = [
    "prothint.py --help",
#    local_test_cmd,
]

modextrapaths = { 'PERL5LIB': ['lib/perl5/site_perl/%(perlver)s/'],
                }

#Below is to supplement the requirement of BRAKER3
modextravars = {
                  'PROTHINT_PATH': '%(installdir)s/bin',
               } 

moduleclass = 'bio'
